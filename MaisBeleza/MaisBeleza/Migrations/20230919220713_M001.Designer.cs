// <auto-generated />
using System;
using MaisBeleza.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaisBeleza.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230919220713_M001")]
    partial class M001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaisBeleza.Models.Agenda", b =>
                {
                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("AgendamentoId", "ServicoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("MaisBeleza.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MeiId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("MaisBeleza.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MaisBeleza.Models.Faturamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("MeiId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MeiId");

                    b.ToTable("Faturamentos");
                });

            modelBuilder.Entity("MaisBeleza.Models.LinkDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("FaturamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeiId")
                        .HasColumnType("int");

                    b.Property<string>("Metodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("FaturamentoId");

                    b.HasIndex("MeiId");

                    b.HasIndex("ServicoId");

                    b.ToTable("LinkDto");
                });

            modelBuilder.Entity("MaisBeleza.Models.Mei", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("HorarioFuncionamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMei")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meis");
                });

            modelBuilder.Entity("MaisBeleza.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<int>("MeiId")
                        .HasColumnType("int");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("MeiId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("MaisBeleza.Models.Agenda", b =>
                {
                    b.HasOne("MaisBeleza.Models.Agendamento", "Agendamento")
                        .WithMany("Servicos")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaisBeleza.Models.Servico", "Servico")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("MaisBeleza.Models.Agendamento", b =>
                {
                    b.HasOne("MaisBeleza.Models.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaisBeleza.Models.Mei", "Mei")
                        .WithMany("Agendamentos")
                        .HasForeignKey("MeiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Mei");
                });

            modelBuilder.Entity("MaisBeleza.Models.Faturamento", b =>
                {
                    b.HasOne("MaisBeleza.Models.Mei", "Mei")
                        .WithMany("Faturamentos")
                        .HasForeignKey("MeiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mei");
                });

            modelBuilder.Entity("MaisBeleza.Models.LinkDto", b =>
                {
                    b.HasOne("MaisBeleza.Models.Agendamento", null)
                        .WithMany("Links")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MaisBeleza.Models.Faturamento", null)
                        .WithMany("Links")
                        .HasForeignKey("FaturamentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MaisBeleza.Models.Mei", null)
                        .WithMany("Links")
                        .HasForeignKey("MeiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MaisBeleza.Models.Servico", null)
                        .WithMany("Links")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MaisBeleza.Models.Servico", b =>
                {
                    b.HasOne("MaisBeleza.Models.Mei", "Mei")
                        .WithMany("Servicos")
                        .HasForeignKey("MeiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mei");
                });

            modelBuilder.Entity("MaisBeleza.Models.Agendamento", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("MaisBeleza.Models.Cliente", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("MaisBeleza.Models.Faturamento", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("MaisBeleza.Models.Mei", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Faturamentos");

                    b.Navigation("Links");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("MaisBeleza.Models.Servico", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
